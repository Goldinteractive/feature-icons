{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///icons.min.js","webpack:///webpack/bootstrap 0a9ed7daf9e49c53edf6","webpack:///./src/index.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","mod","apply","undefined","_toConsumableArray","arr","Array","isArray","arr2","length","from","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","create","constructor","writable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","USER_AGENT","navigator","userAgent","IE11_OR_OLDER","indexOf","NS_SVG","NS_XLINK","IconManager","options","assign","defaultOptions","svgJsonFile","Error","svgSpriteFile","$svgSprite","document","createElement","injectSprite","cb","_this","polyfillAlreadyLoadedIcons","arguments","request","XMLHttpRequest","open","send","onload","e","innerHTML","responseText","body","insertBefore","childNodes","loadData","_this2","iconsData","JSON","parse","getIconFromData","iconId","iconData","icons","getIconFromSprite","$spriteIcon","querySelector","prefixId","equal","original","prefixClass","iconClass","wrapClass","wrapElement","responsive","responsiveClass","width","height","Icon","_base$features$Featur","getPrototypeOf","init","_this4","id","node","getAttribute","polyfilled","manager","console","error","$icon","createElementNS","$parent","parentElement","managerOpts","attributes","$iconNodes","parseFloat","attribute","setAttribute","nodeName","toLowerCase","classList","contains","$wrap","$next","nextSibling","add","appendChild","style","ratioPadding","paddingBottom","$canvas","forEach","$iconNode","cloneNode","$use","updateUseLink","onHub","replaceNode","currentHref","window","location","host","pathname","search","setAttributeNS","base","features","Feature","default"],"mappings":"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","file":"icons.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"icons\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"icons\"] = factory();\n\telse\n\t\troot[\"icons\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"icons\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"icons\"] = factory();\n\telse\n\t\troot[\"icons\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.index = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var USER_AGENT = navigator.userAgent;\n  var IE11_OR_OLDER = USER_AGENT.indexOf('MSIE ') > -1 || USER_AGENT.indexOf('Trident/') > -1;\n\n  var NS_SVG = 'http://www.w3.org/2000/svg';\n  var NS_XLINK = 'http://www.w3.org/1999/xlink';\n\n  /**\n   * Icon manager class.\n   *\n   * @param {Object} options\n   *   Overwrite the [default options]{@link IconManager.defaultOptions}.\n   */\n\n  var IconManager = exports.IconManager = function () {\n    function IconManager(options) {\n      _classCallCheck(this, IconManager);\n\n      this.options = Object.assign({}, IconManager.defaultOptions, options);\n\n      if (!this.options.svgJsonFile) {\n        throw new Error('No SVG json data file given!');\n      }\n\n      if (!this.options.svgSpriteFile) {\n        throw new Error('No SVG sprite file given!');\n      }\n\n      this.$svgSprite = document.createElement('div');\n    }\n\n    /**\n     * Inject markup of svg sprite into the page.\n     * @param {Function} cb - Callback when finished.\n     * @param {Function} [polyfillAlreadyLoadedIcons=true] - Whether already loaded icons should be polyfilled (ie11)\n     */\n\n\n    _createClass(IconManager, [{\n      key: 'injectSprite',\n      value: function injectSprite(cb) {\n        var _this = this;\n\n        var polyfillAlreadyLoadedIcons = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        var request = new XMLHttpRequest();\n\n        request.open('GET', this.options.svgSpriteFile, true);\n        request.send();\n        request.onload = function (e) {\n          _this.$svgSprite.innerHTML = request.responseText;\n          document.body.insertBefore(_this.$svgSprite, document.body.childNodes[0]);\n          cb(_this, e);\n        };\n      }\n\n      /**\n       * Load icon metadata.\n       * @param {Function} cb - Callback when finished.\n       */\n\n    }, {\n      key: 'loadData',\n      value: function loadData(cb) {\n        var _this2 = this;\n\n        var request = new XMLHttpRequest();\n\n        request.open('GET', this.options.svgJsonFile, true);\n        request.send();\n        request.onload = function (e) {\n          _this2.iconsData = JSON.parse(request.responseText);\n          cb(_this2, e);\n        };\n      }\n\n      /**\n       * Return metadata of given icon.\n       *\n       * @param   {String} iconId - Icon id to return metadata from.\n       * @returns {Object}\n       */\n\n    }, {\n      key: 'getIconFromData',\n      value: function getIconFromData(iconId) {\n        var iconData = this.iconsData.icons[iconId];\n        if (!iconData) throw new Error('No icon \"' + iconId + '\" found in icon json data file \"' + this.options.svgJsonFile + '\"!');\n        return this.iconsData.icons[iconId];\n      }\n\n      /**\n       * Return svg element from sprite.\n       *\n       * @param   {String} iconId - Icon id of the element to return.\n       * @returns {Element}\n       */\n\n    }, {\n      key: 'getIconFromSprite',\n      value: function getIconFromSprite(iconId) {\n        var $spriteIcon = this.$svgSprite.querySelector('#' + this.options.prefixId + iconId);\n        if (!$spriteIcon) throw new Error('No icon \"' + iconId + '\" found in svg sprite file \"' + this.options.svgSpriteFile + '\"!');\n        return $spriteIcon;\n      }\n    }]);\n\n    return IconManager;\n  }();\n\n  /**\n   * Default options for icon manager.\n   *\n   * @type {Object}\n   * @property {String}  svgJsonFile - JSON file with icon metadata (attributes).\n   * @property {String}  svgSpriteFile - SVG sprite file with all the icons.\n   * @property {Boolean} [equal=false] - Whether the icons should have the same sizes by default.\n   * @property {Boolean} [original=false] - Whether the icons should have their `width` and `height` attributes from the original svg by default.\n   * @property {String}  [prefixId='icon-'] - Prefix used for the icon ids.\n   * @property {String}  [prefixClass='-icon-'] - Prefix used for the icon classes.\n   * @property {String}  [iconClass='icon-svg'] - Class used for icons.\n   * @property {String}  [wrapClass='icon-box'] - Class used for wrapper.\n   * @property {String}  [wrapElement='span'] - Element tag used for wrapper.\n   * @property {Boolean} [responsive=false] - Whether the icons should be responsive by default.\n   * @property {String}  [responsiveClass='-responsive'] - Class used for responsive icons.\n   * @property {Number}  [width=200] - Default width when original is used if no width has been defined.\n   * @property {Number}  [height=200] - Default height when original is if no height has been defined.\n   */\n  IconManager.defaultOptions = {\n    svgJsonFile: null,\n    svgSpriteFile: null,\n    equal: false,\n    original: false,\n    prefixId: 'icon-',\n    prefixClass: '-icon-',\n    iconClass: 'icon-svg',\n    wrapClass: 'icon-box',\n    wrapElement: 'span',\n    responsive: false,\n    responsiveClass: '-responsive',\n    width: 200,\n    height: 200\n  };\n\n  /**\n   * Icon feature class.\n   */\n\n  var Icon = exports.Icon = function (_base$features$Featur) {\n    _inherits(Icon, _base$features$Featur);\n\n    function Icon() {\n      _classCallCheck(this, Icon);\n\n      return _possibleConstructorReturn(this, (Icon.__proto__ || Object.getPrototypeOf(Icon)).apply(this, arguments));\n    }\n\n    _createClass(Icon, [{\n      key: 'init',\n      value: function init() {\n        var _this4 = this;\n\n        this.id = this.node.getAttribute('data-icon');\n        this.polyfilled = false;\n\n        if (!this.options.manager) {\n          throw new Error('Icon \"' + this.id + '\" feature needs to be initialized with a IconManager instance!');\n        }\n\n        if (!this.id) {\n          console.error('No \"data-icon\" attribute defined', this.node);\n          return false;\n        }\n\n        var $icon = document.createElementNS(NS_SVG, 'svg');\n        var $parent = this.node.parentElement;\n\n        var manager = this.options.manager;\n        var managerOpts = this.options.manager.options;\n\n        var responsive = this.node.getAttribute('data-responsive');\n        this.responsive = responsive !== null ? true : managerOpts.responsive;\n\n        var equal = this.node.getAttribute('data-equal');\n        this.equal = equal !== null ? true : managerOpts.equal;\n\n        var original = this.node.getAttribute('data-original');\n        this.original = original !== null ? true : managerOpts.original;\n\n        var attributes = manager.getIconFromData(this.id).attributes;\n        var $iconNodes = [].concat(_toConsumableArray(manager.getIconFromSprite(this.id).childNodes));\n\n        if (!$iconNodes) {\n          console.error('Icon \"' + this.id + '\" has no child nodes in svg sprite!', this.node);\n          return false;\n        }\n\n        var width = attributes.width ? parseFloat(attributes.width) : null;\n        var height = attributes.height ? parseFloat(attributes.height) : null;\n\n        // take over node attributes to icon\n        for (var attribute in this.node.attributes) {\n          if (attributes.hasOwnProperty(attribute)) {\n            $icon.setAttribute(attribute, attributes[attribute]);\n          }\n        }\n\n        // take over original attributes\n        for (var _attribute in attributes) {\n          if (attributes.hasOwnProperty(_attribute)) {\n            if (_attribute != 'width' && _attribute != 'height' || this.original) {\n              $icon.setAttribute(_attribute, attributes[_attribute]);\n            }\n          }\n        }\n\n        // using setAttribute because ie11 and below doesn't support classList or setting className on svg\n        $icon.setAttribute('class', managerOpts.iconClass + ' ' + managerOpts.prefixClass + this.id);\n\n        if ($parent.nodeName.toLowerCase() == managerOpts.wrapElement && $parent.classList.contains(managerOpts.wrapClass)) {\n          // use parent node as wrap\n          this.$wrap = $parent;\n        } else {\n          var $next = this.node.nextSibling;\n\n          this.$wrap = document.createElement(managerOpts.wrapElement);\n          this.$wrap.classList.add(managerOpts.wrapClass);\n          this.$wrap.classList.add(managerOpts.prefixClass + this.id);\n          this.$wrap.appendChild(this.node);\n\n          if ($next) {\n            $parent.insertBefore(this.$wrap, $next);\n          } else {\n            $parent.appendChild(this.$wrap);\n          }\n        }\n\n        // set classes and attributes based on settings\n        if (this.original) {\n          this.$wrap.classList.add('-original');\n          this.$wrap.style.width = width + 'px';\n          this.$wrap.style.height = height + 'px';\n        }\n\n        if (this.equal) {\n          this.$wrap.classList.add('-equal');\n        }\n\n        if (this.responsive) {\n          var ratioPadding = height / width * 100;\n          this.$wrap.style.paddingBottom = ratioPadding + '%';\n          this.$wrap.classList.add(managerOpts.responsiveClass);\n        } else {\n          // using to keep svg ratio for ie (http://nicolasgallagher.com/canvas-fix-svg-scaling-in-internet-explorer/)\n          var $canvas = document.createElement('canvas');\n          $canvas.classList.add('icon-canvas');\n          $canvas.setAttribute('width', width);\n          $canvas.setAttribute('height', height);\n          this.$wrap.appendChild($canvas);\n        }\n\n        if (IE11_OR_OLDER) {\n          // polyfill ie11 and older with appending icon paths directly\n          $iconNodes.forEach(function ($iconNode) {\n            $icon.appendChild($iconNode.cloneNode(true));\n          });\n\n          this.polyfilled = true;\n        } else {\n          // create use element to use svg from sprite\n          this.$use = document.createElementNS(NS_SVG, 'use');\n          this.updateUseLink();\n\n          // change link of use tag if state has changed\n          this.onHub('statechange', function () {\n            _this4.updateUseLink();\n          });\n\n          this.onHub('icons:update', function () {\n            _this4.updateUseLink();\n          });\n\n          $icon.appendChild(this.$use);\n        }\n\n        this.replaceNode($icon);\n      }\n    }, {\n      key: 'updateUseLink',\n      value: function updateUseLink() {\n        if (!this.$use) return;\n        var currentHref = '//' + window.location.host + window.location.pathname + window.location.search;\n        this.$use.setAttributeNS(NS_XLINK, 'href', currentHref + '#' + this.options.manager.options.prefixId + this.id);\n      }\n    }]);\n\n    return Icon;\n  }(base.features.Feature);\n\n  /**\n   * Default options for icon feature.\n   *\n   * @type {Object}\n   * @property {IconManager} manager - IconManager instance.\n   */\n  Icon.defaultOptions = {\n    manager: null\n  };\n\n  exports.default = Icon;\n});\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// icons.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0a9ed7daf9e49c53edf6","const USER_AGENT = navigator.userAgent\nconst IE11_OR_OLDER = USER_AGENT.indexOf('MSIE ') > -1 || USER_AGENT.indexOf('Trident/') > -1\n\nconst NS_SVG = 'http://www.w3.org/2000/svg'\nconst NS_XLINK = 'http://www.w3.org/1999/xlink'\n\n/**\n * Icon manager class.\n *\n * @param {Object} options\n *   Overwrite the [default options]{@link IconManager.defaultOptions}.\n */\nexport class IconManager {\n\n  constructor(options) {\n    this.options = Object.assign({}, IconManager.defaultOptions, options)\n\n    if (!this.options.svgJsonFile) {\n      throw new Error('No SVG json data file given!')\n    }\n\n    if (!this.options.svgSpriteFile) {\n      throw new Error('No SVG sprite file given!')\n    }\n\n    this.$svgSprite = document.createElement('div')\n  }\n\n  /**\n   * Inject markup of svg sprite into the page.\n   * @param {Function} cb - Callback when finished.\n   * @param {Function} [polyfillAlreadyLoadedIcons=true] - Whether already loaded icons should be polyfilled (ie11)\n   */\n  injectSprite(cb, polyfillAlreadyLoadedIcons = true) {\n    var request = new XMLHttpRequest()\n\n    request.open('GET', this.options.svgSpriteFile, true)\n    request.send()\n    request.onload = (e) => {\n      this.$svgSprite.innerHTML = request.responseText\n      document.body.insertBefore(this.$svgSprite, document.body.childNodes[0])\n      cb(this, e)\n    }\n  }\n\n  /**\n   * Load icon metadata.\n   * @param {Function} cb - Callback when finished.\n   */\n  loadData(cb) {\n    var request = new XMLHttpRequest()\n\n    request.open('GET', this.options.svgJsonFile, true)\n    request.send()\n    request.onload = (e) => {\n      this.iconsData = JSON.parse(request.responseText)\n      cb(this, e)\n    }\n  }\n\n  /**\n   * Return metadata of given icon.\n   *\n   * @param   {String} iconId - Icon id to return metadata from.\n   * @returns {Object}\n   */\n  getIconFromData(iconId) {\n    var iconData = this.iconsData.icons[iconId]\n    if (!iconData) throw new Error(`No icon \"${iconId}\" found in icon json data file \"${this.options.svgJsonFile}\"!`)\n    return this.iconsData.icons[iconId]\n  }\n\n  /**\n   * Return svg element from sprite.\n   *\n   * @param   {String} iconId - Icon id of the element to return.\n   * @returns {Element}\n   */\n  getIconFromSprite(iconId) {\n    var $spriteIcon = this.$svgSprite.querySelector(`#${this.options.prefixId}${iconId}`)\n    if (!$spriteIcon) throw new Error(`No icon \"${iconId}\" found in svg sprite file \"${this.options.svgSpriteFile}\"!`)\n    return $spriteIcon\n  }\n}\n\n/**\n * Default options for icon manager.\n *\n * @type {Object}\n * @property {String}  svgJsonFile - JSON file with icon metadata (attributes).\n * @property {String}  svgSpriteFile - SVG sprite file with all the icons.\n * @property {Boolean} [equal=false] - Whether the icons should have the same sizes by default.\n * @property {Boolean} [original=false] - Whether the icons should have their `width` and `height` attributes from the original svg by default.\n * @property {String}  [prefixId='icon-'] - Prefix used for the icon ids.\n * @property {String}  [prefixClass='-icon-'] - Prefix used for the icon classes.\n * @property {String}  [iconClass='icon-svg'] - Class used for icons.\n * @property {String}  [wrapClass='icon-box'] - Class used for wrapper.\n * @property {String}  [wrapElement='span'] - Element tag used for wrapper.\n * @property {Boolean} [responsive=false] - Whether the icons should be responsive by default.\n * @property {String}  [responsiveClass='-responsive'] - Class used for responsive icons.\n * @property {Number}  [width=200] - Default width when original is used if no width has been defined.\n * @property {Number}  [height=200] - Default height when original is if no height has been defined.\n */\nIconManager.defaultOptions = {\n  svgJsonFile: null,\n  svgSpriteFile: null,\n  equal: false,\n  original: false,\n  prefixId: 'icon-',\n  prefixClass: '-icon-',\n  iconClass: 'icon-svg',\n  wrapClass: 'icon-box',\n  wrapElement: 'span',\n  responsive: false,\n  responsiveClass: '-responsive',\n  width: 200,\n  height: 200\n}\n\n/**\n * Icon feature class.\n */\nexport class Icon extends base.features.Feature {\n\n  init() {\n    this.id = this.node.getAttribute('data-icon')\n    this.polyfilled = false\n\n    if (!this.options.manager) {\n      throw new Error(`Icon \"${this.id}\" feature needs to be initialized with a IconManager instance!`)\n    }\n\n    if (!this.id) {\n      console.error('No \"data-icon\" attribute defined', this.node)\n      return false\n    }\n\n    var $icon = document.createElementNS(NS_SVG, 'svg')\n    var $parent = this.node.parentElement\n\n    var manager = this.options.manager\n    var managerOpts = this.options.manager.options\n\n    var responsive = this.node.getAttribute('data-responsive')\n    this.responsive = responsive !== null ? true : managerOpts.responsive\n\n    var equal = this.node.getAttribute('data-equal')\n    this.equal = equal !== null ? true : managerOpts.equal\n\n    var original = this.node.getAttribute('data-original')\n    this.original = original !== null ? true : managerOpts.original\n\n    var attributes = manager.getIconFromData(this.id).attributes\n    var $iconNodes = [...manager.getIconFromSprite(this.id).childNodes]\n\n    if (!$iconNodes) {\n      console.error(`Icon \"${this.id}\" has no child nodes in svg sprite!`, this.node)\n      return false\n    }\n\n    var width = attributes.width ? parseFloat(attributes.width) : null\n    var height = attributes.height ? parseFloat(attributes.height) : null\n\n    // take over node attributes to icon\n    for (let attribute in this.node.attributes) {\n      if (attributes.hasOwnProperty(attribute)) {\n        $icon.setAttribute(attribute, attributes[attribute])\n      }\n    }\n\n    // take over original attributes\n    for (let attribute in attributes) {\n      if (attributes.hasOwnProperty(attribute)) {\n        if ((attribute != 'width'\n             && attribute != 'height')\n            || this.original\n        ) {\n          $icon.setAttribute(attribute, attributes[attribute])\n        }\n      }\n    }\n\n    // using setAttribute because ie11 and below doesn't support classList or setting className on svg\n    $icon.setAttribute('class', `${managerOpts.iconClass} ${managerOpts.prefixClass}${this.id}`)\n\n\n    if ($parent.nodeName.toLowerCase() == managerOpts.wrapElement\n        && $parent.classList.contains(managerOpts.wrapClass)\n    ) {\n      // use parent node as wrap\n      this.$wrap = $parent\n    } else {\n      var $next = this.node.nextSibling\n\n      this.$wrap = document.createElement(managerOpts.wrapElement)\n      this.$wrap.classList.add(managerOpts.wrapClass)\n      this.$wrap.classList.add(managerOpts.prefixClass + this.id)\n      this.$wrap.appendChild(this.node)\n\n      if ($next) {\n        $parent.insertBefore(this.$wrap, $next)\n      } else {\n        $parent.appendChild(this.$wrap)\n      }\n    }\n\n    // set classes and attributes based on settings\n    if (this.original) {\n      this.$wrap.classList.add('-original')\n      this.$wrap.style.width = width + 'px'\n      this.$wrap.style.height = height + 'px'\n    }\n\n    if (this.equal) {\n      this.$wrap.classList.add('-equal')\n    }\n\n    if (this.responsive) {\n      var ratioPadding = height / width * 100\n      this.$wrap.style.paddingBottom = `${ratioPadding}%`\n      this.$wrap.classList.add(managerOpts.responsiveClass)\n    } else {\n      // using to keep svg ratio for ie (http://nicolasgallagher.com/canvas-fix-svg-scaling-in-internet-explorer/)\n      var $canvas = document.createElement('canvas')\n      $canvas.classList.add('icon-canvas')\n      $canvas.setAttribute('width', width)\n      $canvas.setAttribute('height', height)\n      this.$wrap.appendChild($canvas)\n    }\n\n\n    if (IE11_OR_OLDER) {\n      // polyfill ie11 and older with appending icon paths directly\n      $iconNodes.forEach(($iconNode) => {\n        $icon.appendChild($iconNode.cloneNode(true))\n      })\n\n      this.polyfilled = true\n    } else {\n      // create use element to use svg from sprite\n      this.$use = document.createElementNS(NS_SVG, 'use')\n      this.updateUseLink()\n\n      // change link of use tag if state has changed\n      this.onHub('statechange', () => {\n        this.updateUseLink()\n      })\n\n      this.onHub('icons:update', () => {\n        this.updateUseLink()\n      })\n\n      $icon.appendChild(this.$use)\n    }\n\n    this.replaceNode($icon)\n  }\n\n  updateUseLink() {\n    if (!this.$use) return\n    var currentHref = '//' + window.location.host + window.location.pathname + window.location.search\n    this.$use.setAttributeNS(NS_XLINK, 'href', `${currentHref}#${this.options.manager.options.prefixId}${this.id}`)\n  }\n\n}\n\n/**\n * Default options for icon feature.\n *\n * @type {Object}\n * @property {IconManager} manager - IconManager instance.\n */\nIcon.defaultOptions = {\n  manager: null\n}\n\nexport default Icon\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}