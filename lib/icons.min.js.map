{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///icons.min.js","webpack:///webpack/bootstrap 176427f4fab3e1e15c90","webpack:///./src/index.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","mod","apply","undefined","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","create","constructor","writable","setPrototypeOf","__proto__","_toConsumableArray","arr","Array","isArray","arr2","length","from","_classCallCheck","instance","Constructor","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","HREF","window","location","href","USER_AGENT","navigator","userAgent","IE11_OR_OLDER","indexOf","NS_SVG","NS_XLINK","IconManager","options","base","utils","extend","defaultOptions","svgJsonFile","Error","svgSpriteFile","$svgSprite","document","createElement","injectSprite","cb","_this","polyfillAlreadyLoadedIcons","arguments","request","XMLHttpRequest","open","send","onload","e","innerHTML","responseText","body","insertBefore","childNodes","$icons","querySelectorAll","iconClass","forEach","$icon","_replaceUseWithOriginalPaths","loadData","_this2","iconsData","JSON","parse","getIconFromData","iconId","iconData","icons","getIconFromSprite","$spriteIcon","querySelector","prefixId","$use","id","$childNodes","xlink","getAttribute","split","removeChild","$childNode","appendChild","cloneNode","wrap","withSize","prefixClass","wrapClass","wrapElement","responsive","responsiveClass","Icon","_base$features$Featur","getPrototypeOf","init","_this4","node","polyfilled","manager","managerOpts","attributes","$iconNodes","width","parseFloat","height","attribute","setAttribute","classList","add","$parent","parentNode","nodeName","toLowerCase","contains","$wrap","$next","nextSibling","ratioPadding","style","paddingBottom","$iconNode","createElementNS","setAttributeNS","features","Feature","default"],"mappings":"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","file":"icons.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"icons\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"icons\"] = factory();\n\telse\n\t\troot[\"icons\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"icons\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"icons\"] = factory();\n\telse\n\t\troot[\"icons\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (global, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.index = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var HREF = window.location.href;\n  var USER_AGENT = navigator.userAgent;\n  var IE11_OR_OLDER = USER_AGENT.indexOf('MSIE ') > -1 || USER_AGENT.indexOf('Trident/') > -1;\n\n  var NS_SVG = 'http://www.w3.org/2000/svg';\n  var NS_XLINK = 'http://www.w3.org/1999/xlink';\n\n  /**\n   * Icon manager class.\n   *\n   * @param {Object} options\n   *   Overwrite the [default options]{@link IconManager.defaultOptions}.\n   */\n\n  var IconManager = exports.IconManager = function () {\n    function IconManager(options) {\n      _classCallCheck(this, IconManager);\n\n      this.options = base.utils.object.extend({}, IconManager.defaultOptions, options);\n\n      if (!this.options.svgJsonFile) {\n        throw new Error('No SVG json data file given!');\n      }\n\n      if (!this.options.svgSpriteFile) {\n        throw new Error('No SVG sprite file given!');\n      }\n\n      this.$svgSprite = document.createElement('div');\n    }\n\n    /**\n     * Inject markup of svg sprite into the page.\n     * @param {Function} cb - Callback when finished.\n     * @param {Function} [polyfillAlreadyLoadedIcons=true] - Whether already loaded icons should be polyfilled (ie11)\n     */\n\n\n    _createClass(IconManager, [{\n      key: 'injectSprite',\n      value: function injectSprite(cb) {\n        var _this = this;\n\n        var polyfillAlreadyLoadedIcons = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        var request = new XMLHttpRequest();\n\n        request.open('GET', this.options.svgSpriteFile, true);\n        request.send();\n        request.onload = function (e) {\n          _this.$svgSprite.innerHTML = request.responseText;\n          document.body.insertBefore(_this.$svgSprite, document.body.childNodes[0]);\n\n          if (polyfillAlreadyLoadedIcons && IE11_OR_OLDER) {\n            var $icons = [].concat(_toConsumableArray(document.querySelectorAll('.' + _this.options.iconClass)));\n\n            // replace use tag with the actual child nodes inside the svg\n            $icons.forEach(function ($icon) {\n              _this._replaceUseWithOriginalPaths($icon);\n            });\n          }\n\n          cb(_this, e);\n        };\n      }\n\n      /**\n       * Load icon metadata.\n       * @param {Function} cb - Callback when finished.\n       */\n\n    }, {\n      key: 'loadData',\n      value: function loadData(cb) {\n        var _this2 = this;\n\n        var request = new XMLHttpRequest();\n\n        request.open('GET', this.options.svgJsonFile, true);\n        request.send();\n        request.onload = function (e) {\n          _this2.iconsData = JSON.parse(request.responseText);\n          cb(_this2, e);\n        };\n      }\n\n      /**\n       * Return metadata of given icon.\n       *\n       * @param   {String} iconId - Icon id to return metadata from.\n       * @returns {Object}\n       */\n\n    }, {\n      key: 'getIconFromData',\n      value: function getIconFromData(iconId) {\n        var iconData = this.iconsData.icons[iconId];\n        if (!iconData) throw new Error('No icon \"' + iconId + '\" found in icon json data file \"' + this.options.svgJsonFile + '\"!');\n        return this.iconsData.icons[iconId];\n      }\n\n      /**\n       * Return svg element from sprite.\n       *\n       * @param   {String} iconId - Icon id of the element to return.\n       * @returns {Element}\n       */\n\n    }, {\n      key: 'getIconFromSprite',\n      value: function getIconFromSprite(iconId) {\n        var $spriteIcon = this.$svgSprite.querySelector('#' + this.options.prefixId + iconId);\n        if (!$spriteIcon) throw new Error('No icon \"' + iconId + '\" found in svg sprite file \"' + this.options.svgSpriteFile + '\"!');\n        return $spriteIcon;\n      }\n\n      /**\n       * Replace use element with original svg paths/content.\n       * Needed to polyfill icons on IE11 on windows 8 (displays weird crispy icons when \"use\" element is used).\n       *\n       * @private\n       * @param   {Element} $icon SVG element\n       * @returns {Boolean}\n       */\n\n    }, {\n      key: '_replaceUseWithOriginalPaths',\n      value: function _replaceUseWithOriginalPaths($icon) {\n        var $use, id, $childNodes, xlink;\n\n        $use = $icon.querySelector('use');\n        if ($use) return false;\n\n        xlink = $use.getAttribute('xlink:href');\n        if (!xlink) return false;\n\n        $childNodes = this.getIconFromSprite(xlink.split('#')[1]).childNodes;\n        if (!$childNodes.length) return false;\n\n        // clean use tag\n        $icon.removeChild($use);\n\n        // append child nodes (because innerHTML is not available in ie11 on svg tag, fuck ie again)\n        $childNodes.forEach(function ($childNode) {\n          $icon.appendChild($childNode.cloneNode(true));\n        });\n\n        return true;\n      }\n    }]);\n\n    return IconManager;\n  }();\n\n  /**\n   * Default options for icon manager.\n   *\n   * @type {Object}\n   * @property {String}  svgJsonFile - JSON file with icon metadata (attributes).\n   * @property {String}  svgSpriteFile - SVG sprite file with all the icons.\n   * @property {Boolean} [wrap=false] - Whether the icons should have the same width by default.\n   * @property {Boolean} [withSize=false] - Whether the icons should have their `width` and `height` attributes by default.\n   * @property {String}  [prefixId='icon-'] - Prefix used for the icon ids.\n   * @property {String}  [prefixClass='-icon-'] - Prefix used for the icon classes.\n   * @property {String}  [iconClass='icon-svg'] - Class used for icons.\n   * @property {String}  [wrapClass='icon-box'] - Class used for wrapper.\n   * @property {String}  [wrapElement='span'] - Element tag used for wrapper.\n   * @property {Boolean} [responsive=false] - Whether the icons should be responsive by default.\n   * @property {String}  [responsiveClass='-responsive'] - Class used for responsive icons.\n   */\n  IconManager.defaultOptions = {\n    svgJsonFile: null,\n    svgSpriteFile: null,\n\n    wrap: false,\n    withSize: false,\n    prefixId: 'icon-',\n    prefixClass: '-icon-',\n    iconClass: 'icon-svg',\n    wrapClass: 'icon-box',\n    wrapElement: 'span',\n    responsive: false,\n    responsiveClass: '-responsive'\n  };\n\n  /**\n   * Icon feature class.\n   */\n\n  var Icon = exports.Icon = function (_base$features$Featur) {\n    _inherits(Icon, _base$features$Featur);\n\n    function Icon() {\n      _classCallCheck(this, Icon);\n\n      return _possibleConstructorReturn(this, (Icon.__proto__ || Object.getPrototypeOf(Icon)).apply(this, arguments));\n    }\n\n    _createClass(Icon, [{\n      key: 'init',\n      value: function init() {\n        var _this4 = this;\n\n        this.id = this.node.getAttribute('data-icon');\n        this.polyfilled = false;\n\n        if (!this.options.manager) {\n          throw new Error('Icon \"' + this.id + '\" feature needs to be initialized with a IconManager instance!');\n        }\n\n        var manager = this.options.manager;\n        var managerOpts = this.options.manager.options;\n\n        this.responsive = this.node.getAttribute('data-responsive');\n        this.responsive = this.responsive !== null ? this.responsive : managerOpts.responsive;\n\n        this.wrap = this.node.getAttribute('data-wrap');\n        this.wrap = this.wrap !== null ? this.wrap : managerOpts.wrap;\n\n        this.withSize = this.node.getAttribute('data-with-size');\n        this.withSize = this.withSize !== null ? this.withSize : managerOpts.withSize;\n\n        var attributes = manager.getIconFromData(this.id).attributes;\n        var $iconNodes = manager.getIconFromSprite(this.id).childNodes;\n\n        var width = attributes.width ? parseFloat(attributes.width) : null;\n        var height = attributes.height ? parseFloat(attributes.height) : null;\n\n        if (!$iconNodes) {\n          throw new Error('Icon \"' + this.id + '\" has no child nodes in svg sprite!');\n        }\n\n        for (var attribute in attributes) {\n          if (attributes.hasOwnProperty(attribute)) {\n            if (attribute != 'width' && attribute != 'height' || this.withSize) {\n              this.node.setAttribute(attribute, attributes[attribute]);\n            }\n          }\n        }\n\n        this.node.classList.add(managerOpts.iconClass);\n        this.node.classList.add('' + managerOpts.prefixClass + this.id);\n\n        if (this.wrap || this.responsive) {\n          var $parent = this.node.parentNode;\n\n          if ($parent.nodeName.toLowerCase() == managerOpts.wrapElement && $parent.classList.contains(managerOpts.wrapClass)) {\n            this.$wrap = $parent;\n          } else {\n            var $next = this.node.nextSibling;\n\n            this.$wrap = document.createElement(managerOpts.wrapElement);\n            this.$wrap.classList.add(managerOpts.wrapClass);\n            this.$wrap.appendChild(this.node);\n\n            if ($next) {\n              $parent.insertBefore(this.$wrap, $next);\n            } else {\n              $parent.appendChild(this.$wrap);\n            }\n          }\n\n          if (this.responsive) {\n            if (!width || !height) {\n              throw new Error('Can\\'t calculate responsive icon\\n              \"' + this.id + '\" because width and/or height attributes are missing!');\n            }\n\n            var ratioPadding = height / width * 100;\n            this.$wrap.style.paddingBottom = ratioPadding + '%';\n            this.$wrap.classList.add(managerOpts.responsiveClass);\n            this.$wrap.classList.add('' + managerOpts.prefixClass + this.id);\n          }\n        }\n\n        if (IE11_OR_OLDER) {\n          $iconNodes.forEach(function ($iconNode) {\n            _this4.node.appendChild($iconNode);\n          });\n\n          this.polyfilled = true;\n        } else {\n          var $use = document.createElementNS(NS_SVG, 'use');\n          $use.setAttributeNS(NS_XLINK, 'href', HREF + '#' + managerOpts.prefixId + this.id);\n          this.node.appendChild($use);\n        }\n      }\n    }]);\n\n    return Icon;\n  }(base.features.Feature);\n\n  /**\n   * Default options for icon feature.\n   *\n   * @type {Object}\n   * @property {IconManager} manager - IconManager instance.\n   */\n  Icon.defaultOptions = {\n    manager: null\n  };\n\n  exports.default = Icon;\n});\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// icons.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 176427f4fab3e1e15c90","const HREF = window.location.href\nconst USER_AGENT = navigator.userAgent\nconst IE11_OR_OLDER = USER_AGENT.indexOf('MSIE ') > -1 || USER_AGENT.indexOf('Trident/') > -1\n\nconst NS_SVG = 'http://www.w3.org/2000/svg'\nconst NS_XLINK = 'http://www.w3.org/1999/xlink'\n\n/**\n * Icon manager class.\n *\n * @param {Object} options\n *   Overwrite the [default options]{@link IconManager.defaultOptions}.\n */\nexport class IconManager {\n\n  constructor(options) {\n    this.options = base.utils.object.extend({}, IconManager.defaultOptions, options)\n\n    if (!this.options.svgJsonFile) {\n      throw new Error('No SVG json data file given!')\n    }\n\n    if (!this.options.svgSpriteFile) {\n      throw new Error('No SVG sprite file given!')\n    }\n\n    this.$svgSprite = document.createElement('div')\n  }\n\n  /**\n   * Inject markup of svg sprite into the page.\n   * @param {Function} cb - Callback when finished.\n   * @param {Function} [polyfillAlreadyLoadedIcons=true] - Whether already loaded icons should be polyfilled (ie11)\n   */\n  injectSprite(cb, polyfillAlreadyLoadedIcons = true) {\n    var request = new XMLHttpRequest()\n\n    request.open('GET', this.options.svgSpriteFile, true)\n    request.send()\n    request.onload = (e) => {\n      this.$svgSprite.innerHTML = request.responseText\n      document.body.insertBefore(this.$svgSprite, document.body.childNodes[0])\n\n      if (polyfillAlreadyLoadedIcons && IE11_OR_OLDER) {\n        var $icons = [...document.querySelectorAll(`.${this.options.iconClass}`)]\n\n        // replace use tag with the actual child nodes inside the svg\n        $icons.forEach(($icon) => {\n          this._replaceUseWithOriginalPaths($icon)\n        })\n      }\n\n      cb(this, e)\n    }\n  }\n\n  /**\n   * Load icon metadata.\n   * @param {Function} cb - Callback when finished.\n   */\n  loadData(cb) {\n    var request = new XMLHttpRequest()\n\n    request.open('GET', this.options.svgJsonFile, true)\n    request.send()\n    request.onload = (e) => {\n      this.iconsData = JSON.parse(request.responseText)\n      cb(this, e)\n    }\n  }\n\n  /**\n   * Return metadata of given icon.\n   *\n   * @param   {String} iconId - Icon id to return metadata from.\n   * @returns {Object}\n   */\n  getIconFromData(iconId) {\n    var iconData = this.iconsData.icons[iconId]\n    if (!iconData) throw new Error(`No icon \"${iconId}\" found in icon json data file \"${this.options.svgJsonFile}\"!`)\n    return this.iconsData.icons[iconId]\n  }\n\n  /**\n   * Return svg element from sprite.\n   *\n   * @param   {String} iconId - Icon id of the element to return.\n   * @returns {Element}\n   */\n  getIconFromSprite(iconId) {\n    var $spriteIcon = this.$svgSprite.querySelector(`#${this.options.prefixId}${iconId}`)\n    if (!$spriteIcon) throw new Error(`No icon \"${iconId}\" found in svg sprite file \"${this.options.svgSpriteFile}\"!`)\n    return $spriteIcon\n  }\n\n  /**\n   * Replace use element with original svg paths/content.\n   * Needed to polyfill icons on IE11 on windows 8 (displays weird crispy icons when \"use\" element is used).\n   *\n   * @private\n   * @param   {Element} $icon SVG element\n   * @returns {Boolean}\n   */\n  _replaceUseWithOriginalPaths($icon) {\n    var $use, id, $childNodes, xlink\n\n    $use = $icon.querySelector('use')\n    if ($use) return false\n\n    xlink = $use.getAttribute('xlink:href')\n    if (!xlink) return false\n\n    $childNodes = this.getIconFromSprite(xlink.split('#')[1]).childNodes\n    if (!$childNodes.length) return false\n\n    // clean use tag\n    $icon.removeChild($use)\n\n    // append child nodes (because innerHTML is not available in ie11 on svg tag, fuck ie again)\n    $childNodes.forEach(($childNode) => {\n      $icon.appendChild($childNode.cloneNode(true))\n    })\n\n    return true\n  }\n}\n\n/**\n * Default options for icon manager.\n *\n * @type {Object}\n * @property {String}  svgJsonFile - JSON file with icon metadata (attributes).\n * @property {String}  svgSpriteFile - SVG sprite file with all the icons.\n * @property {Boolean} [wrap=false] - Whether the icons should have the same width by default.\n * @property {Boolean} [withSize=false] - Whether the icons should have their `width` and `height` attributes by default.\n * @property {String}  [prefixId='icon-'] - Prefix used for the icon ids.\n * @property {String}  [prefixClass='-icon-'] - Prefix used for the icon classes.\n * @property {String}  [iconClass='icon-svg'] - Class used for icons.\n * @property {String}  [wrapClass='icon-box'] - Class used for wrapper.\n * @property {String}  [wrapElement='span'] - Element tag used for wrapper.\n * @property {Boolean} [responsive=false] - Whether the icons should be responsive by default.\n * @property {String}  [responsiveClass='-responsive'] - Class used for responsive icons.\n */\nIconManager.defaultOptions = {\n  svgJsonFile: null,\n  svgSpriteFile: null,\n\n  wrap: false,\n  withSize: false,\n  prefixId: 'icon-',\n  prefixClass: '-icon-',\n  iconClass: 'icon-svg',\n  wrapClass: 'icon-box',\n  wrapElement: 'span',\n  responsive: false,\n  responsiveClass: '-responsive'\n}\n\n/**\n * Icon feature class.\n */\nexport class Icon extends base.features.Feature {\n\n  init() {\n    this.id = this.node.getAttribute('data-icon')\n    this.polyfilled = false\n\n    if (!this.options.manager) {\n      throw new Error(`Icon \"${this.id}\" feature needs to be initialized with a IconManager instance!`)\n    }\n\n    var manager = this.options.manager\n    var managerOpts = this.options.manager.options\n\n    this.responsive = this.node.getAttribute('data-responsive')\n    this.responsive = this.responsive !== null ? this.responsive : managerOpts.responsive\n\n    this.wrap = this.node.getAttribute('data-wrap')\n    this.wrap = this.wrap !== null ? this.wrap : managerOpts.wrap\n\n    this.withSize = this.node.getAttribute('data-with-size')\n    this.withSize = this.withSize !== null ? this.withSize : managerOpts.withSize\n\n    var attributes = manager.getIconFromData(this.id).attributes\n    var $iconNodes = manager.getIconFromSprite(this.id).childNodes\n\n    var width = attributes.width ? parseFloat(attributes.width) : null\n    var height = attributes.height ? parseFloat(attributes.height) : null\n\n    if (!$iconNodes) {\n      throw new Error(`Icon \"${this.id}\" has no child nodes in svg sprite!`)\n    }\n\n    for (let attribute in attributes) {\n      if (attributes.hasOwnProperty(attribute)) {\n        if ((attribute != 'width'\n             && attribute != 'height')\n            || this.withSize\n        ) {\n          this.node.setAttribute(attribute, attributes[attribute])\n        }\n      }\n    }\n\n    this.node.classList.add(managerOpts.iconClass)\n    this.node.classList.add(`${managerOpts.prefixClass}${this.id}`)\n\n    if (this.wrap || this.responsive) {\n      var $parent = this.node.parentNode\n\n      if ($parent.nodeName.toLowerCase() == managerOpts.wrapElement\n          && $parent.classList.contains(managerOpts.wrapClass)\n      ) {\n        this.$wrap = $parent\n      } else {\n        var $next = this.node.nextSibling\n\n        this.$wrap = document.createElement(managerOpts.wrapElement)\n        this.$wrap.classList.add(managerOpts.wrapClass)\n        this.$wrap.appendChild(this.node)\n\n        if ($next) {\n          $parent.insertBefore(this.$wrap, $next)\n        } else {\n          $parent.appendChild(this.$wrap)\n        }\n      }\n\n      if (this.responsive) {\n        if (!width || !height) {\n            throw new Error(\n              `Can't calculate responsive icon\n              \"${this.id}\" because width and/or height attributes are missing!`\n            )\n        }\n\n        var ratioPadding = height / width * 100\n        this.$wrap.style.paddingBottom = `${ratioPadding}%`\n        this.$wrap.classList.add(managerOpts.responsiveClass)\n        this.$wrap.classList.add(`${managerOpts.prefixClass}${this.id}`)\n      }\n    }\n\n    if (IE11_OR_OLDER) {\n      $iconNodes.forEach(($iconNode) => {\n        this.node.appendChild($iconNode)\n      })\n\n      this.polyfilled = true\n    } else {\n      var $use = document.createElementNS(NS_SVG, 'use')\n      $use.setAttributeNS(NS_XLINK, 'href', `${HREF}#${managerOpts.prefixId}${this.id}`)\n      this.node.appendChild($use)\n    }\n  }\n\n}\n\n/**\n * Default options for icon feature.\n *\n * @type {Object}\n * @property {IconManager} manager - IconManager instance.\n */\nIcon.defaultOptions = {\n  manager: null\n}\n\nexport default Icon\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}